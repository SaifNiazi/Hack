<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>bar</groupId>
	<artifactId>SAS</artifactId>
	<version>0.1</version>
	<packaging>jar</packaging>

	<name>Name of project</name>
	<description>Reference implementation</description>

	<!-- Repositories -->
	<repositories>
		<repository>
			<id>conjars.org</id>
			<url>http://conjars.org/repo</url>
		</repository>
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
		<repository>
			<id>cloudera-chd</id>
			<name>Cloudera Maven Repository</name>
			<url>http://repository.cloudera.com/content/repositories/releases/</url>
		</repository>
		<!-- For hadoop-lzo-compression -->
		<repository>
			<id>twitter</id>
			<url>http://maven.twttr.com</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>3.1</maven.compiler.source>
		<maven.compiler.target>3.1</maven.compiler.target>
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<encoding>UTF-8</encoding>
		<scalding.version>0.13.1</scalding.version>
		<junit.version>4.8.1</junit.version>
		<specs2.version>2.3.4</specs2.version>
		<java.home>C:\New folder\Java\jdk1.7.0_65</java.home>
		<scala.full.version>2.11.5</scala.full.version>
		<scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
		<scalatest.version>2.2.2</scalatest.version>
		<typesafe.config.version>1.0.0</typesafe.config.version>

	</properties>

	<dependencies>

		<!-- Scala -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.full.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.full.version}</version>
		</dependency>

		<!-- Scalding -->
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>scalding-core_2.11</artifactId>
			<version>${scalding.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>scalding-commons_2.11</artifactId>
			<version>${scalding.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.11</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2_2.10</artifactId>
			<version>${specs2.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.9</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.9</version>
		</dependency>

		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>scalding-json_2.11</artifactId>
			<version>0.13.1</version>
		</dependency>

		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.5.2</version>
		</dependency>


	</dependencies>

	<build>
		<sourceDirectory>src/</sourceDirectory>
		<testSourceDirectory>src</testSourceDirectory>

		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${artifactId}-${version}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>

		<resources>
			<resource>
				<directory>src</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>


		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.14.2</version>
			</plugin>

			<!-- IMPORTANT: Requires Maven 3.0+ The plugin was renamed to from maven-scala-plugin 
				into scala-maven-plugin to respect the new maven naming policy for plugins. 
				(ie only maven core plugins are prefixed maven)scala-maven-plugin -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.6</version>
				<executions>
					<execution>
						<id>compile-scala</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>compile-tests-scala</id>
						<phase>compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<!-- Advanced options if Zinc server is in use <configuration> <recompileMode>incremental</recompileMode> 
					<useZincServer>true</useZincServer> </configuration> -->
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Define in the include patterns of Unit and Job test cases -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>surefire-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<disableXmlReport>true</disableXmlReport>
					<includes>
						<include>**/*Test*</include>
						<include>**/*Spec*</include>
					</includes>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> 
				<version>3.1</version> <executions> <execution> <id>attach-sources</id> <goals> 
				<goal>jar</goal> </goals> </execution> </executions> </plugin> -->

			<!-- Fat Jar: This plugin assembles a Fat-Jar that contains all the dependencies 
				and libs -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- bind to the packaging phase -->
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>libs</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>libs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>${scalatest-maven-plugin.version}</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<stdout>W</stdout> <!-- Skip coloring output -->
				</configuration>
				<executions>
					<execution>
						<id>scala-test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>


		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>


